// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'core/models/objectbox/meal_objectbox_model.dart';
import 'core/models/objectbox/search_cache_objectbox_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(1, 3216279247983858522),
    name: 'MealObjectBoxModel',
    lastPropertyId: const obx_int.IdUid(9, 6032104345557546439),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 1909083804762316072),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 416925939696230008),
        name: 'mealId',
        type: 9,
        flags: 2080,
        indexId: const obx_int.IdUid(1, 5680977694177299841),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2465585319617347433),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 697167662493896821),
        name: 'thumbnail',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 295135431415565913),
        name: 'category',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 8091539931480802533),
        name: 'instructions',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 3577515846377971443),
        name: 'timestamp',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 6880616342907743180),
        name: 'expiresAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 6032104345557546439),
        name: 'ingredientsJson',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(5, 8968588156299457652),
    name: 'SearchObjectBoxModel',
    lastPropertyId: const obx_int.IdUid(5, 7124170131564438798),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 9196602285289620889),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2112773283773912307),
        name: 'searchKey',
        type: 9,
        flags: 2080,
        indexId: const obx_int.IdUid(5, 4558635282602567955),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3669008489968697198),
        name: 'dataJson',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 3272055426762604712),
        name: 'timestamp',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 7124170131564438798),
        name: 'expiresAt',
        type: 10,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(5, 8968588156299457652),
    lastIndexId: const obx_int.IdUid(5, 4558635282602567955),
    lastRelationId: const obx_int.IdUid(0, 0),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [
      5944868737443677518,
      9126563289174553222,
      1479326570417141255,
    ],
    retiredIndexUids: const [],
    retiredPropertyUids: const [
      3503355529017192638,
      4537691885222050670,
      2541940041479011029,
      357997349123447813,
      862877427245714856,
      1553656053260174190,
      649001311484237065,
      6339342438387178180,
      1049942567777903413,
      4765664448616622737,
      2950491887036591377,
      4915985329516389903,
      8546928726471246976,
      6851881272290672028,
      7527444281069174428,
    ],
    retiredRelationUids: const [],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    MealObjectBoxModel: obx_int.EntityDefinition<MealObjectBoxModel>(
      model: _entities[0],
      toOneRelations: (MealObjectBoxModel object) => [],
      toManyRelations: (MealObjectBoxModel object) => {},
      getId: (MealObjectBoxModel object) => object.id,
      setId: (MealObjectBoxModel object, int id) {
        object.id = id;
      },
      objectToFB: (MealObjectBoxModel object, fb.Builder fbb) {
        final mealIdOffset = fbb.writeString(object.mealId);
        final nameOffset = fbb.writeString(object.name);
        final thumbnailOffset = object.thumbnail == null
            ? null
            : fbb.writeString(object.thumbnail!);
        final categoryOffset = fbb.writeString(object.category);
        final instructionsOffset = fbb.writeString(object.instructions);
        final ingredientsJsonOffset = fbb.writeString(object.ingredientsJson);
        fbb.startTable(10);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, mealIdOffset);
        fbb.addOffset(2, nameOffset);
        fbb.addOffset(3, thumbnailOffset);
        fbb.addOffset(4, categoryOffset);
        fbb.addOffset(5, instructionsOffset);
        fbb.addInt64(6, object.timestamp.millisecondsSinceEpoch);
        fbb.addInt64(7, object.expiresAt?.millisecondsSinceEpoch);
        fbb.addOffset(8, ingredientsJsonOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final expiresAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final mealIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final categoryParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 12, '');
        final instructionsParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 14, '');
        final ingredientsJsonParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 20, '');
        final timestampParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0),
        );
        final idParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final thumbnailParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final expiresAtParam = expiresAtValue == null
            ? null
            : DateTime.fromMillisecondsSinceEpoch(expiresAtValue);
        final object = MealObjectBoxModel(
          mealId: mealIdParam,
          name: nameParam,
          category: categoryParam,
          instructions: instructionsParam,
          ingredientsJson: ingredientsJsonParam,
          timestamp: timestampParam,
          id: idParam,
          thumbnail: thumbnailParam,
          expiresAt: expiresAtParam,
        );

        return object;
      },
    ),
    SearchObjectBoxModel: obx_int.EntityDefinition<SearchObjectBoxModel>(
      model: _entities[1],
      toOneRelations: (SearchObjectBoxModel object) => [],
      toManyRelations: (SearchObjectBoxModel object) => {},
      getId: (SearchObjectBoxModel object) => object.id,
      setId: (SearchObjectBoxModel object, int id) {
        object.id = id;
      },
      objectToFB: (SearchObjectBoxModel object, fb.Builder fbb) {
        final searchKeyOffset = fbb.writeString(object.searchKey);
        final dataJsonOffset = fbb.writeString(object.dataJson);
        fbb.startTable(6);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, searchKeyOffset);
        fbb.addOffset(2, dataJsonOffset);
        fbb.addInt64(3, object.timestamp.millisecondsSinceEpoch);
        fbb.addInt64(4, object.expiresAt.millisecondsSinceEpoch);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final searchKeyParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final dataJsonParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final timestampParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0),
        );
        final expiresAtParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0),
        );
        final idParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final object = SearchObjectBoxModel(
          searchKey: searchKeyParam,
          dataJson: dataJsonParam,
          timestamp: timestampParam,
          expiresAt: expiresAtParam,
          id: idParam,
        );

        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [MealObjectBoxModel] entity fields to define ObjectBox queries.
class MealObjectBoxModel_ {
  /// See [MealObjectBoxModel.id].
  static final id = obx.QueryIntegerProperty<MealObjectBoxModel>(
    _entities[0].properties[0],
  );

  /// See [MealObjectBoxModel.mealId].
  static final mealId = obx.QueryStringProperty<MealObjectBoxModel>(
    _entities[0].properties[1],
  );

  /// See [MealObjectBoxModel.name].
  static final name = obx.QueryStringProperty<MealObjectBoxModel>(
    _entities[0].properties[2],
  );

  /// See [MealObjectBoxModel.thumbnail].
  static final thumbnail = obx.QueryStringProperty<MealObjectBoxModel>(
    _entities[0].properties[3],
  );

  /// See [MealObjectBoxModel.category].
  static final category = obx.QueryStringProperty<MealObjectBoxModel>(
    _entities[0].properties[4],
  );

  /// See [MealObjectBoxModel.instructions].
  static final instructions = obx.QueryStringProperty<MealObjectBoxModel>(
    _entities[0].properties[5],
  );

  /// See [MealObjectBoxModel.timestamp].
  static final timestamp = obx.QueryDateProperty<MealObjectBoxModel>(
    _entities[0].properties[6],
  );

  /// See [MealObjectBoxModel.expiresAt].
  static final expiresAt = obx.QueryDateProperty<MealObjectBoxModel>(
    _entities[0].properties[7],
  );

  /// See [MealObjectBoxModel.ingredientsJson].
  static final ingredientsJson = obx.QueryStringProperty<MealObjectBoxModel>(
    _entities[0].properties[8],
  );
}

/// [SearchObjectBoxModel] entity fields to define ObjectBox queries.
class SearchObjectBoxModel_ {
  /// See [SearchObjectBoxModel.id].
  static final id = obx.QueryIntegerProperty<SearchObjectBoxModel>(
    _entities[1].properties[0],
  );

  /// See [SearchObjectBoxModel.searchKey].
  static final searchKey = obx.QueryStringProperty<SearchObjectBoxModel>(
    _entities[1].properties[1],
  );

  /// See [SearchObjectBoxModel.dataJson].
  static final dataJson = obx.QueryStringProperty<SearchObjectBoxModel>(
    _entities[1].properties[2],
  );

  /// See [SearchObjectBoxModel.timestamp].
  static final timestamp = obx.QueryDateProperty<SearchObjectBoxModel>(
    _entities[1].properties[3],
  );

  /// See [SearchObjectBoxModel.expiresAt].
  static final expiresAt = obx.QueryDateProperty<SearchObjectBoxModel>(
    _entities[1].properties[4],
  );
}
